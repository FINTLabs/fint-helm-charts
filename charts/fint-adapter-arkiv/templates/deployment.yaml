apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nameOverride }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.nameOverride }}
  template:
    metadata:
      labels: 
        app: {{ .Values.nameOverride }}
    spec:
      volumes:
        - name: tempdir
          emptyDir:
            sizeLimit: 1G
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      restartPolicy: {{ .Values.restartPolicy }}
      schedulerName: {{ .Values.schedulerName }}
      containers:
        - name: {{ .Values.nameOverride }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          - secretRef:
              name: {{ .Values.secretRef }}
          ports:
            - name: http
              containerPort: 8091
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          terminationMessagePath: {{ .Values.terminationMessagePath }}
          terminationMessagePolicy: {{ .Values.terminationMessagePolicy }}
          volumeMounts:
          - mountPath: /temp
            name: tempdir
          env:
            {{- range .Values.env }}
            - {name: {{ .name}}, value: {{ .value | toJson}}}
            {{- end }}